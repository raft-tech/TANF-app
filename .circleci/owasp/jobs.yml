  backend-owasp-scan:
    executor: large-machine-executor
    working_directory: ~/tdp-apps
    steps:
      - checkout
      - docker-compose-check
      - docker-compose-up-backend
      - docker-compose-up-frontend
      - run:
          name: Wait for Django to become available
          command: |
            cd tdrs-backend;
            docker-compose run --rm zaproxy bash -c \
              "PATH=$PATH:/home/zap/.local/bin &&
               pip install wait-for-it &&
               wait-for-it --service http://web:8080 \
                           --timeout 60 \
                           -- echo \"Django is ready\""
      - run-owasp-scan:
          environment: circle
          target: backend

  frontend-owasp-scan:
    executor: large-machine-executor
    working_directory: ~/tdp-apps
    steps:
      - checkout
      - docker-compose-check
      - docker-compose-up-backend
      - docker-compose-up-frontend
      - run:
          name: Wait for frontend to become available
          command: |
            cd tdrs-frontend;
            docker-compose run --rm zaproxy bash -c \
              "PATH=$PATH:/home/zap/.local/bin &&
               pip install wait-for-it &&
               wait-for-it --service http://tdp-frontend/ \
                           --timeout 60 \
                           -- echo \"Frontend is ready\""
      - run-owasp-scan:
          environment: circle
          target: frontend

  nightly-owasp-scan:
    executor: large-machine-executor
    working_directory: ~/tdp-apps
    parameters:
      cf_password:
        type: string
        default: CF_PASSWORD_STAGING
      cf_username:
        type: string
        default: CF_USERNAME_STAGING
      cf_space:
        type: string
        default: tanf-staging
      cf_org:
        type: string
        default: "CF_ORG"
      target_env:
        type: enum
        enum: [ "staging", "develop", "prod" ]
    steps:
      - checkout
      - sudo-check
      - cf-check
      - docker-compose-check
      - login-cloud-dot-gov:
          cf-password: <<parameters.cf_password>>
          cf-space: <<parameters.cf_space>>
          cf-org: <<parameters.cf_org>>
          cf-username: <<parameters.cf_username>>
      - run-owasp-scan:
          environment: nightly
          target: backend
          target_env: <<parameters.target_env>>
      - run-owasp-scan:
          environment: nightly
          target: frontend
          target_env: <<parameters.target_env>>
      - save-owasp-scan-results
