
worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 1024; }

http {
    charset utf-8;
    log_format cloudfoundry 'NginxLog "$request" $status $body_bytes_sent';
    access_log /dev/stdout cloudfoundry;

    default_type application/octet-stream;
    include mime.types;
    sendfile on;

    tcp_nopush on;
    keepalive_timeout 30;
    port_in_redirect off; # Ensure that redirects don't include the internal container PORT - 8080

    log_format compression '$remote_addr - $remote_user [$time_local] '
                            '"proxy_host and upstream_addr": $proxy_host $upstream_addr, '
                           ' "request": $request, '
                           '"body_bytes_sent" : $body_bytes_sent, ' 
                           '"request_body": $request_body, '
                           '"http_x_forwarded_for": $http_x_forwarded_for, ' 
                            '"host": $host, '
                            ' "status": $status, '
                            '"proxy_add_x_forwarded_for": $proxy_add_x_forwarded_for, '
                           '"http_referer": $http_referer, '
                           '"http_user_agent": $http_user_agent';

    server {
        root public;
        listen {{port}};
        access_log /home/vcap/app/nginx_access.log compression;

        include locations.conf;

        set $CONNECT_SRC {{env "CONNECT_SRC"}};
        set $ALLOWED_ORIGIN {{env "ALLOWED_ORIGIN"}};

        # Block all requests except ones listed in whitelist; disabled for local
        include ip_whitelist.conf;

        ### ADD HEADERS
        # for clickjacking
        add_header X-Frame-Options SAMEORIGIN always;

        # Using Adobe products like PDF, Flash, etc.? You can implement this header to instruct the browser
        # how to handle the requests over a cross-domain. By implementing this header, you restrict loading
        # your site’s assets from other domains to avoid resource abuse.
        add_header X-Permitted-Cross-Domain-Policies: none;

        # Referrer-Policy: no-referrer
        add_header Referrer-Policy: no-referrer;

        # Cross-Origin-Embedder-Policy:This response header (also named COEP) prevents a document from loading
        # any cross-origin resources that don’t explicitly grant the document permission
        add_header Cross-Origin-Embedder-Policy: require-corp;

        # Isolates the browsing context exclusively to same-origin documents. Cross-origin documents are not loaded
        # in the same browsing context
        add_header Cross-Origin-Opener-Policy: same-origin;

        # This response header (also named CORP) allows to define a policy that lets web sites and applications opt
        # in to protection against certain requests from other origins (such as those issued with elements like
        # <script> and <img>), to mitigate speculative side-channel attacks, like Spectre, as well as Cross-Site
        # Script Inclusion (XSSI) attacks
        add_header Cross-Origin-Resource-Policy: same-origin;

        # The must-revalidate response directive indicates that the response can be stored in caches and can be
        # reused while fresh. If the response becomes stale, it must be validated with the origin server before reuse.
        add_header Cache-Control: max-age=604800;

        # prevent MIME sniffing
        add_header X-Content-Type-Options: nosniff;

        set $CSP "default-src 'none';";
        set $CSP "${CSP}script-src 'self';";
        set $CSP "${CSP}script-src-elem 'none';";
        set $CSP "${CSP}script-src-attr 'self';";
        set $CSP "${CSP}style-src 'self' 'unsafe-inline';";
        set $CSP "${CSP}style-src-elem 'self';";
        set $CSP "${CSP}style-src-attr 'none';";
        set $CSP "${CSP}img-src 'self' data:;";
        set $CSP "${CSP}font-src 'self';";
        set $CSP "${CSP}connect-src 'self' ${CONNECT_SRC};";
        set $CSP "${CSP}manifest-src 'self';";
        set $CSP "${CSP}frame-src 'None';";
        set $CSP "${CSP}frame-ancestors 'none';";
        set $CSP "${CSP}child-src 'none';";
        set $CSP "${CSP}media-src 'none';";
        set $CSP "${CSP}object-src 'none';";
        set $CSP "${CSP}prefetch-src 'none';";
        set $CSP "${CSP}form-action 'none';";
        set $CSP "${CSP}worker-src 'none';";

        add_header Content-Security-Policy "${CSP}";
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        add_header Access-Control-Allow-Origin "${ALLOWED_ORIGIN}";
    }
}
